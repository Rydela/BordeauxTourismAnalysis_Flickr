library(dbscan)
dbs_2007 <- dbscan(filtered_2007[,3:4], eps = 0.00055, minPts = 80)
filtered_2007$cluster <- dbs_2007$cluster
summary(dbs_2007)
str(dbs_2007)
groups  <- filtered_2007 %>% filter(cluster != 0)
noise  <- filtered_2007 %>% filter(cluster == 0)
ggplot(filtered_2007, aes(x = longitude, y = latitude, alpha = 0.5)) +
geom_point(aes(fill = "grey"), noise) +
geom_point(aes(colour = as.factor(cluster)), groups,
size = 3)
library(dbscan)
dbs_2007 <- dbscan(filtered_2007[,3:4], eps = 0.0000055, minPts = 80)
filtered_2007$cluster <- dbs_2007$cluster
summary(dbs_2007)
str(dbs_2007)
groups  <- filtered_2007 %>% filter(cluster != 0)
noise  <- filtered_2007 %>% filter(cluster == 0)
ggplot(filtered_2007, aes(x = longitude, y = latitude, alpha = 0.5)) +
geom_point(aes(fill = "grey"), noise) +
geom_point(aes(colour = as.factor(cluster)), groups,
size = 3)
library(dbscan)
dbs_2007 <- dbscan(filtered_2007[,3:4], eps = 0.0055, minPts = 80)
filtered_2007$cluster <- dbs_2007$cluster
summary(dbs_2007)
str(dbs_2007)
groups  <- filtered_2007 %>% filter(cluster != 0)
noise  <- filtered_2007 %>% filter(cluster == 0)
ggplot(filtered_2007, aes(x = longitude, y = latitude, alpha = 0.5)) +
geom_point(aes(fill = "grey"), noise) +
geom_point(aes(colour = as.factor(cluster)), groups,
size = 3)
View(data_2007)
View(data_2007)
data = rbind(data_2007,data_2008)
View(data)
install.packages('skimr')
skimr::skim(data_2007)
## User must appear more than once
filtered_2007 <-
data_2007%>%
group_by(owner_id) %>%
filter(n()>2)%>%
arrange(owner_id,date_taken)
View(filtered_2007)
# Load libraries
library(rworldmap)
library(ggmap)
register_google(key = "AIzaSyA5RyFB0KqjBQZ2o-uOUcGYK8jjb4v9eYM")
google_key()
ggmap_show_api_key()
# Map Bordeaux
map <- get_map(location = 'Bordeaux', zoom = 15)
# Plot data points
ggmap(map) +
geom_point(
aes(x = filtered_2007$longitude, y = filtered_2007$latitude),
data = filtered_2007, alpha = .5
)
groups  <- filtered_2007 %>% filter(cluster != 0)
library(dbscan)
dbs_2007 <- dbscan(filtered_2007[,3:4], eps = 0.0055, minPts = 80)
filtered_2007$cluster <- dbs_2007$cluster
summary(dbs_2007)
str(dbs_2007)
groups  <- filtered_2007 %>% filter(cluster != 0)
noise  <- filtered_2007 %>% filter(cluster == 0)
ggplot(filtered_2007, aes(x = longitude, y = latitude, alpha = 0.5)) +
geom_point(aes(fill = "grey"), noise) +
geom_point(aes(colour = as.factor(cluster)), groups,
size = 3)
library(dbscan)
dbs_2007 <- dbscan(filtered_2007[,3:4], eps = 0.000055, minPts = 80)
filtered_2007$cluster <- dbs_2007$cluster
summary(dbs_2007)
str(dbs_2007)
groups  <- filtered_2007 %>% filter(cluster != 0)
noise  <- filtered_2007 %>% filter(cluster == 0)
ggplot(filtered_2007, aes(x = longitude, y = latitude, alpha = 0.5)) +
geom_point(aes(fill = "grey"), noise) +
geom_point(aes(colour = as.factor(cluster)), groups,
size = 3)
knitr::opts_chunk$set(echo = TRUE)
## User must appear more than once
filtered_2007 <- data_2007%>%
group_by(owner_id) %>%
filter(n()>2)%>%
arrange(owner_id,date_taken)
install.packages(c("dbscan", "ggmap", "rworldmap", "skimr"))
knitr::opts_chunk$set(echo = TRUE)
# Get a List of all files in directory named with a keyword, say all `.csv` files
filenames <- list.files("C:\Users\Ryan\De Vinci\Parcours R&D 2019-2020 - Ryan\Analysis\Data\Windows", pattern="*.csv", fullnames=TRUE)
# Get a List of all files in directory named with a keyword, say all `.csv` files
library(readr)
merged <- read_csv("Data/Windows/Merged/merged.csv")
View(merged)
# Get a List of all files in directory named with a keyword, say all `.csv` files
library(readr)
merged <- read_delim("Data/Windows/Merged/merged.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(merged)
summary(merged)
str(merged)
## User must appear more than once
filtered_merged <- merged%>%
group_by(owner_id) %>%
filter(n()>2)%>%
arrange(owner_id,date_taken)
# Load library
library(data.table)
library(readr)
library(ggplot2)
library(dplyr)
# Load library
library(dplyr)
library(data.table)
library(readr)
library(ggplot2)
## User must appear more than once
filtered_merged <- merged%>%
group_by(owner_id) %>%
filter(n()>2)%>%
arrange(owner_id,date_taken)
# Load library
library(dplyr)
library(data.table)
library(readr)
library(ggplot2)
# Get a List of all files in directory named with a keyword, say all `.csv` files
library(readr)
merged <- read_delim("Data/Windows/Merged/merged.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(merged)
summary(merged)
str(merged)
skimr::skim(merged)
## User must appear more than once
filtered_merged <- merged%>%
group_by(owner_id) %>%
filter(n()>2)%>%
arrange(owner_id,date_taken)
summary(merged)
str(merged)
skimr::skim(merged)
merged$Time <- format(as.POSIXct(df$Start,format="%Y:%m:%d %H:%M:%S"),"%H:%M:%S")
merged$Date <- as.Date(df$Start) #already got this one from the answers above
merged$Time <- format(as.POSIXct(merged$Start,format="%Y:%m:%d %H:%M:%S"),"%H:%M:%S")
merged$Time <- format(as.POSIXct(merged$date_taken,format="%Y:%m:%d %H:%M:%S"),"%H:%M:%S")
merged$Date <- format(as.POSIXct(merged$date_taken,format="%Y:%m:%d %H:%M:%S"),"%Y:%m:%d")
merged$Date <- as.Date(merged$date_taken) #already got this one from the answers above
merged$Time <- format(as.POSIXct(merged$date_taken) ,format = "%H:%M:%S")
merged$Date <- as.Date(merged$date_taken) #already got this one from the answers above
# Load library
library(dplyr)
library(data.table)
library(readr)
library(ggplot2)
# Get a List of all files in directory named with a keyword, say all `.csv` files
library(readr)
merged <- read_delim("Data/Windows/Merged/merged.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(merged)
summary(merged)
str(merged)
skimr::skim(merged)
## User must appear more than once
filtered_merged <- merged%>%
group_by(owner_id) %>%
filter(n()>2)%>%
arrange(owner_id,date_taken)
merged$Date <- as.Date(merged$date_taken)
# Load library
library(dplyr)
library(data.table)
library(readr)
library(ggplot2)
# Get a List of all files in directory named with a keyword, say all `.csv` files
library(readr)
merged <- read_delim("Data/Windows/Merged/merged.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(merged)
summary(merged)
str(merged)
skimr::skim(merged)
merged$Date <- as.Date(merged$date_taken)
## User must appear more than once
filtered_merged <- merged%>%
group_by(owner_id) %>%
filter(n()>2)%>%
arrange(owner_id,date_taken)
# Load libraries
library(rworldmap)
library(ggmap)
register_google(key = "AIzaSyA5RyFB0KqjBQZ2o-uOUcGYK8jjb4v9eYM")
google_key()
ggmap_show_api_key()
# Map Bordeaux
map <- get_map(location = 'Bordeaux', zoom = 15)
# Plot data points
ggmap(map) +
geom_point(
aes(x = filtered_merged$longitude, y = filtered_merged$latitude),
data = filtered_merged, alpha = .5
)
library(dbscan)
dbs_merged <- dbscan(filtered_merged[,3:4], eps = 0.000055, minPts = 80)
# Get a List of all files in directory named with a keyword, say all `.csv` files
library(readr)
merged <- read_delim("Data/Windows/Merged/merged.csv",
"\t", escape_double = FALSE, col_types = cols(image_id = col_number(),
latitude = col_number(), longitude = col_number()),
trim_ws = TRUE)
summary(merged)
str(merged)
skimr::skim(merged)
View(merged)
merged$Date <- as.Date(merged$date_taken)
View(merged)
## User must appear more than once
filtered_merged <- merged%>%
group_by(owner_id) %>%
filter(n()>2)%>%
arrange(owner_id,date_taken)
# Load libraries
library(rworldmap)
library(ggmap)
register_google(key = "AIzaSyA5RyFB0KqjBQZ2o-uOUcGYK8jjb4v9eYM")
google_key()
ggmap_show_api_key()
# Map Bordeaux
map <- get_map(location = 'Bordeaux', zoom = 15)
# Plot data points
ggmap(map) +
geom_point(
aes(x = filtered_merged$longitude, y = filtered_merged$latitude),
data = filtered_merged, alpha = .5
)
library(dbscan)
dbs_merged <- dbscan(filtered_merged[,3:4], eps = 0.000055, minPts = 80)
#
merged_window1 <- merged %>%
filter(DATE >= as.Date('2005-01-01') & DATE <= as.Date('2007-12-30'))
#
merged_window1 <- merged %>%
filter(Date >= as.Date('2005-01-01') & DATE <= as.Date('2007-12-30'))
#
merged_window1 <- merged %>%
filter(Date >= as.Date('2005-01-01') & Date <= as.Date('2007-12-30'))
View(merged_window1)
View(merged_window1)
#
data_2005to2007 <- merged %>%
filter(Date >= as.Date('2005-01-01') & Date <= as.Date('2007-12-31'))
#
data_2007to2009 <- merged %>%
filter(Date >= as.Date('2007-01-01') & Date <= as.Date('2009-12-31'))
data_2010to2012 <- merged %>%
filter(Date >= as.Date('2010-01-01') & Date <= as.Date('2012-12-31'))
data_2013to2015 <- merged %>%
filter(Date >= as.Date('2013-01-01') & Date <= as.Date('2015-12-31'))
data_2016to2018 <- merged %>%
filter(Date >= as.Date('2016-01-01') & Date <= as.Date('2018-12-31'))
# Load libraries
library(rworldmap)
library(ggmap)
register_google(key = "AIzaSyA5RyFB0KqjBQZ2o-uOUcGYK8jjb4v9eYM")
google_key()
ggmap_show_api_key()
# Map Bordeaux
map <- get_map(location = 'Bordeaux', zoom = 15)
# Plot data points
ggmap(map) +
geom_point(
aes(x = data_2016to2018$longitude, y = data_2016to2018$latitude),
data = data_2016to2018, alpha = .5
)
library(dbscan)
dbs_merged <- dbscan(data_2016to2018[,3:4], eps = 0.000055, minPts = 80)
data_2016to2018$cluster <- data_2016to2018$cluster
summary(dbs_merged)
str(dbs_merged)
library(dbscan)
dbs_merged <- dbscan(data_2016to2018[,3:4], eps = 0.000055, minPts = 80)
data_2016to2018$cluster <- dbs_merged$cluster
summary(dbs_merged)
str(dbs_merged)
groups  <- data_2016to2018 %>% filter(cluster != 0)
noise  <- data_2016to2018 %>% filter(cluster == 0)
ggplot(data_2016to2018, aes(x = longitude, y = latitude, alpha = 0.5)) +
geom_point(aes(fill = "grey"), noise) +
geom_point(aes(colour = as.factor(cluster)), groups,
size = 3)
knitr::opts_chunk$set(echo = TRUE)
# Load library
library(dplyr)
library(data.table)
library(readr)
library(ggplot2)
library(dbscan)
# Load library
library(dplyr)
library(readr)
library(ggplot2)
library(dbscan)
# Get a List of all files in directory named with a keyword, say all `.csv` files
merged <- read_delim("Data/merged.csv",
"\t", escape_double = FALSE, col_types = cols(image_id = col_number(),
latitude = col_number(), longitude = col_number()),
trim_ws = TRUE)
summary(merged)
View(merged)
View(merged)
str(merged)
skimr::skim(merged)
merged <- na.omit(merged)
## User must appear more than once
merged <- merged%>%
group_by(owner_id) %>%
filter(n()>2)%>%
arrange(owner_id,date_taken)
summary(merged)
merged <- na.omit(merged)
# Load library
library(dplyr)
library(readr)
library(ggplot2)
library(dbscan)
library(leaflet)
install.packages("leaflet")
# Load library
library(dplyr)
library(readr)
library(ggplot2)
library(dbscan)
library(leaflet)
install.packages(c("BH", "car", "caTools", "cli", "data.table", "dendextend", "digest", "dplyr", "FactoMineR", "fansi", "farver", "forcats", "ggplot2", "ggpubr", "ggrepel", "gplots", "hms", "jsonlite", "knitr", "leaps", "lifecycle", "mime", "nloptr", "pbkrtest", "pillar", "plyr", "prettyunits", "quantreg", "rlang", "rmarkdown", "sp", "SparseM", "stringi", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun", "yaml"))
install.packages(c("BH", "car", "caTools", "cli", "data.table", "dendextend", "digest", "dplyr", "FactoMineR", "fansi", "farver", "forcats", "ggplot2", "ggpubr", "ggrepel", "gplots", "hms", "jsonlite", "knitr", "leaps", "lifecycle", "mime", "nloptr", "pbkrtest", "pillar", "plyr", "prettyunits", "quantreg", "rlang", "rmarkdown", "sp", "SparseM", "stringi", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun", "yaml"))
install.packages(c("BH", "car", "caTools", "cli", "data.table", "dendextend", "digest", "dplyr", "FactoMineR", "fansi", "farver", "forcats", "ggplot2", "ggpubr", "ggrepel", "gplots", "hms", "jsonlite", "knitr", "leaps", "lifecycle", "mime", "nloptr", "pbkrtest", "pillar", "plyr", "prettyunits", "quantreg", "rlang", "rmarkdown", "sp", "SparseM", "stringi", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun", "yaml"))
install.packages(c("BH", "car", "caTools", "cli", "data.table", "dendextend", "digest", "dplyr", "FactoMineR", "fansi", "farver", "forcats", "ggplot2", "ggpubr", "ggrepel", "gplots", "hms", "jsonlite", "knitr", "leaps", "lifecycle", "mime", "nloptr", "pbkrtest", "pillar", "plyr", "prettyunits", "quantreg", "rlang", "rmarkdown", "sp", "SparseM", "stringi", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun", "yaml"))
knitr::opts_chunk$set(echo = TRUE)
# Load library
library(dplyr)
library(readr)
library(ggplot2)
library(dbscan)
library(leaflet)
# Get a List of all files in directory named with a keyword, say all `.csv` files
merged <- read_delim("Data/merged.csv",
"\t", escape_double = FALSE, col_types = cols(image_id = col_number(),
latitude = col_number(), longitude = col_number()),
trim_ws = TRUE)
summary(merged)
skimr::skim(merged)
merged <- na.omit(merged)
merged$Date <- as.Date(merged$date_taken)
#
data_2007to2009 <- merged %>%
filter(Date >= as.Date('2007-01-01') & Date <= as.Date('2009-12-31'))
data_2010to2012 <- merged %>%
filter(Date >= as.Date('2010-01-01') & Date <= as.Date('2012-12-31'))
data_2013to2015 <- merged %>%
filter(Date >= as.Date('2013-01-01') & Date <= as.Date('2015-12-31'))
data_2016to2018 <- merged %>%
filter(Date >= as.Date('2016-01-01') & Date <= as.Date('2018-12-31'))
## User must appear more than once
data_2016to2018 <- data_2016to2018%>%
group_by(owner_id) %>%
filter(n()>2)%>%
arrange(owner_id,date_taken)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= data_2016to2018$longitude,
lat= data_2016to2018$latitude)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= data_2016to2018$longitude,
lat= data_2016to2018$latitude,
weight = 1 ,
color = red,
radius = 100,
fillOpacity = 0.9)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= data_2016to2018$longitude,
lat= data_2016to2018$latitude,
weight = 1,
radius = 100,
fillOpacity = 0.9)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= data_2016to2018$longitude,
lat= data_2016to2018$latitude,
weight = 1,
radius = 2,
fillOpacity = 0.9)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= data_2016to2018$longitude,
lat= data_2016to2018$latitude,
weight = 1,
radius = 2,
fillOpacity = 0.7)
m  # Print the map
dbs_merged <- dbscan(data_2016to2018[,3:4], eps = 0.000055, minPts = 80)
data_2016to2018$cluster <- dbs_merged$cluster
summary(dbs_merged)
str(dbs_merged)
groups  <- data_2016to2018 %>% filter(cluster != 0)
noise  <- data_2016to2018 %>% filter(cluster == 0)
ggplot(data_2016to2018, aes(x = longitude, y = latitude, alpha = 0.5)) +
geom_point(aes(fill = "grey"), noise) +
geom_point(aes(colour = as.factor(cluster)), groups,
size = 3)
View(dbs_merged)
View(dbs_merged)
View(groups)
View(groups)
groups  <- data_2016to2018 %>% filter(cluster != 0)
noise  <- data_2016to2018 %>% filter(cluster == 0)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= groups$longitude,
lat= groups$latitude,
weight = 1,
radius = 2,
fillOpacity = 0.7)
m  # Print the map
dbs_merged <- dbscan(data_2016to2018[,3:4], eps = 0.000055, minPts = 40)
data_2016to2018$cluster <- dbs_merged$cluster
summary(dbs_merged)
str(dbs_merged)
groups  <- data_2016to2018 %>% filter(cluster != 0)
noise  <- data_2016to2018 %>% filter(cluster == 0)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= groups$longitude,
lat= groups$latitude,
weight = 1,
radius = 2,
fillOpacity = 0.7)
m  # Print the map
groups  <- data_2016to2018 %>% filter(cluster != 0)
noise  <- data_2016to2018 %>% filter(cluster == 0)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= data_2016to2018$longitude,
lat= data_2016to2018$latitude,
weight = 1,
radius = 2,
fillOpacity = 0.7)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= data_2016to2018$longitude,
lat= data_2016to2018$latitude,
weight = 1,
radius = 2,
color = "red",
fillOpacity = 0.7)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= data_2016to2018$longitude,
lat= data_2016to2018$latitude,
weight = 1,
radius = 2,
color = "red",
fillOpacity = 0.4)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= data_2016to2018$longitude,
lat= data_2016to2018$latitude,
weight = 1,
radius = 2,
color = "blue",
fillOpacity = 0.4)
m  # Print the map
groups  <- data_2016to2018 %>% filter(cluster != 0)
noise  <- data_2016to2018 %>% filter(cluster == 0)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= groups$longitude,
lat= groups$latitude,
weight = 1,
radius = 2,
color = "blue",
fillOpacity = 0.4)
m  # Print the map
dbs_merged <- dbscan(data_2016to2018[,3:4], eps = 0.000055, minPts = 20)
data_2016to2018$cluster <- dbs_merged$cluster
summary(dbs_merged)
str(dbs_merged)
groups  <- data_2016to2018 %>% filter(cluster != 0)
noise  <- data_2016to2018 %>% filter(cluster == 0)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addCircleMarkers(lng= groups$longitude,
lat= groups$latitude,
weight = 1,
radius = 2,
color = "blue",
fillOpacity = 0.4)
m  # Print the map
